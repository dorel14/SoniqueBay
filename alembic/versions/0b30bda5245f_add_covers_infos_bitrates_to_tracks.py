"""Add covers infos + bitrates to tracks

Revision ID: 0b30bda5245f
Revises: a90d361a9e8e
Create Date: 2025-05-17 18:42:45.996937

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0b30bda5245f'
down_revision: Union[str, None] = 'a90d361a9e8e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema with date handling."""
    # Nettoyer la table temporaire si elle existe
    op.execute("DROP TABLE IF EXISTS _alembic_tmp_albums")
    
    # Mise Ã  jour des dates nulles dans albums
    op.execute("""
        UPDATE albums 
        SET date_added = CURRENT_TIMESTAMP 
        WHERE date_added IS NULL
    """)
    op.execute("""
        UPDATE albums 
        SET date_modified = CURRENT_TIMESTAMP 
        WHERE date_modified IS NULL
    """)

    # Maintenant on peut modifier les contraintes
    with op.batch_alter_table('albums', schema=None) as batch_op:
        batch_op.alter_column('date_added',
               existing_type=sa.DATETIME(),
               nullable=False,
               server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('date_modified',
               existing_type=sa.DATETIME(),
               nullable=False,
               server_default=sa.text('CURRENT_TIMESTAMP'))

    # Ajout des nouvelles colonnes aux tracks
    with op.batch_alter_table('tracks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cover_data', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('mime_type', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('file_type', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('bitrate', sa.Integer(), nullable=True))
        batch_op.alter_column('artist_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # Nettoyer la table temporaire si elle existe
    op.execute("DROP TABLE IF EXISTS _alembic_tmp_albums")
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tracks', schema=None) as batch_op:
        batch_op.alter_column('artist_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('bitrate')
        batch_op.drop_column('file_type')
        batch_op.drop_column('mime_type')
        batch_op.drop_column('cover_data')

    with op.batch_alter_table('albums', schema=None) as batch_op:
        batch_op.alter_column('date_modified',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('date_added',
               existing_type=sa.DATETIME(),
               nullable=True)

    # ### end Alembic commands ###
