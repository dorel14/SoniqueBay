"""Update tracks model for better relations with artist

Revision ID: f51e3d7d3913
Revises: b8bd3b7338ba
Create Date: 2025-05-18 19:36:27.123644

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f51e3d7d3913'
down_revision: Union[str, None] = 'b8bd3b7338ba'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('albums', schema=None) as batch_op:
        batch_op.drop_constraint('musicbrain_id', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_albums_musicbrainz_albumid'), ['musicbrainz_albumid'])

    with op.batch_alter_table('artists', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_unique_constraint(batch_op.f('uq_artists_musicbrainz_artistid'), ['musicbrainz_artistid'])

    with op.batch_alter_table('genres', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_genres_name'), ['name'])

    with op.batch_alter_table('settings', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_settings_key'), ['key'])

    with op.batch_alter_table('tracks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('track_number', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('disc_number', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('musicbrainz_albumid', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('musicbrainz_artistid', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('musicbrainz_albumartistid', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('musicbrainz_genre', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('acoustid_fingerprint', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('cover_data', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('cover_mime_type', sa.String(), nullable=True))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_unique_constraint(batch_op.f('uq_tracks_musicbrainz_id'), ['musicbrainz_id'])
        batch_op.create_unique_constraint(batch_op.f('uq_tracks_path'), ['path'])
        batch_op.create_foreign_key(batch_op.f('fk_tracks_album_id_albums'), 'albums', ['album_id'], ['id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tracks', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_tracks_album_id_albums'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('uq_tracks_path'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_tracks_musicbrainz_id'), type_='unique')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
        batch_op.drop_column('cover_mime_type')
        batch_op.drop_column('cover_data')
        batch_op.drop_column('acoustid_fingerprint')
        batch_op.drop_column('musicbrainz_genre')
        batch_op.drop_column('musicbrainz_albumartistid')
        batch_op.drop_column('musicbrainz_artistid')
        batch_op.drop_column('musicbrainz_albumid')
        batch_op.drop_column('disc_number')
        batch_op.drop_column('track_number')

    with op.batch_alter_table('settings', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_settings_key'), type_='unique')

    with op.batch_alter_table('genres', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_genres_name'), type_='unique')

    with op.batch_alter_table('artists', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_artists_musicbrainz_artistid'), type_='unique')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('albums', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_albums_musicbrainz_albumid'), type_='unique')
        batch_op.create_unique_constraint('musicbrain_id', ['musicbrainz_albumid'])

    # ### end Alembic commands ###
