"""Add tags models

Revision ID: f0e817915b8e
Revises: 8747cbb4cb48
Create Date: 2025-05-24 14:21:24.681995

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f0e817915b8e'
down_revision: Union[str, None] = '8747cbb4cb48'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('genre_tags', schema=None) as batch_op:
        batch_op.drop_constraint('uq_genre_tags_name', type_='unique')
        batch_op.create_index(batch_op.f('ix_genre_tags_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_genre_tags_name'), ['name'], unique=True)

    with op.batch_alter_table('mood_tags', schema=None) as batch_op:
        batch_op.drop_constraint('uq_mood_tags_name', type_='unique')
        batch_op.create_index(batch_op.f('ix_mood_tags_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_mood_tags_name'), ['name'], unique=True)

    with op.batch_alter_table('track_genre_tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tag_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('fk_track_genre_tags_genre_tag_id_genre_tags', type_='foreignkey')
        batch_op.drop_constraint('fk_track_genre_tags_track_id_tracks', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_track_genre_tags_track_id_tracks'), 'tracks', ['track_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('fk_track_genre_tags_tag_id_genre_tags'), 'genre_tags', ['tag_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('genre_tag_id')

    with op.batch_alter_table('track_mood_tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tag_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('fk_track_mood_tags_track_id_tracks', type_='foreignkey')
        batch_op.drop_constraint('fk_track_mood_tags_mood_tag_id_mood_tags', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_track_mood_tags_track_id_tracks'), 'tracks', ['track_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('fk_track_mood_tags_tag_id_mood_tags'), 'mood_tags', ['tag_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('mood_tag_id')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('track_mood_tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('mood_tag_id', sa.INTEGER(), nullable=True))
        batch_op.drop_constraint(batch_op.f('fk_track_mood_tags_tag_id_mood_tags'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_track_mood_tags_track_id_tracks'), type_='foreignkey')
        batch_op.create_foreign_key('fk_track_mood_tags_mood_tag_id_mood_tags', 'mood_tags', ['mood_tag_id'], ['id'])
        batch_op.create_foreign_key('fk_track_mood_tags_track_id_tracks', 'tracks', ['track_id'], ['id'])
        batch_op.drop_column('tag_id')

    with op.batch_alter_table('track_genre_tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('genre_tag_id', sa.INTEGER(), nullable=True))
        batch_op.drop_constraint(batch_op.f('fk_track_genre_tags_tag_id_genre_tags'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_track_genre_tags_track_id_tracks'), type_='foreignkey')
        batch_op.create_foreign_key('fk_track_genre_tags_track_id_tracks', 'tracks', ['track_id'], ['id'])
        batch_op.create_foreign_key('fk_track_genre_tags_genre_tag_id_genre_tags', 'genre_tags', ['genre_tag_id'], ['id'])
        batch_op.drop_column('tag_id')

    with op.batch_alter_table('mood_tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mood_tags_name'))
        batch_op.drop_index(batch_op.f('ix_mood_tags_id'))
        batch_op.create_unique_constraint('uq_mood_tags_name', ['name'])

    with op.batch_alter_table('genre_tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_genre_tags_name'))
        batch_op.drop_index(batch_op.f('ix_genre_tags_id'))
        batch_op.create_unique_constraint('uq_genre_tags_name', ['name'])

    # ### end Alembic commands ###
