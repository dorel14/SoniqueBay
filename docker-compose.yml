services:
    redis:
        image: redis:7
        restart: unless-stopped
        volumes:
            - redis-data:/data
        command: ["redis-server", "--appendonly", "yes", "appendfsync", "everysec", "save", "60", "1000"]
        ports:
            - "6379:6379"
    library_service:
        build:
            context: .
            dockerfile: ./backend/library_api/Dockerfile
        ports:
            - "8001:8001"
        hostname: library
        restart: unless-stopped
        env_file:
            - .env
        environment:
            - PLATFORM=${PLATFORM:-windows}
            - MUSIC_PATH=/music
            - NAS_USER=djdmd14
            - NAS_PASS=mc30314500
            - CELERY_BROKER_URL=redis://redis:6379/0
            - CELERY_RESULT_LIBRARY=redis://redis:6379/0
        volumes:
            - library-dir:/library
            - db-data:/library/data
            - music-share:/music:ro
        healthcheck:
            test: ["CMD-SHELL", "/healthcheck.sh"]
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 10s
    recommender_service:
        build:
            context: .
            dockerfile: ./backend/recomender_api/Dockerfile
        ports:
            - "8001:8001"
        hostname: recommender
        restart: unless-stopped
        env_file:
            - .env
        environment:
            - CELERY_BROKER_URL=redis://redis:6379/0
            - CELERY_RESULT_LIBRARY=redis://redis:6379/0
        volumes:
            - recommender-dir:/recommender
            - recommender-db-data:/recommender/data
        healthcheck:
            test: ["CMD-SHELL", "/healthcheck.sh"]
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 10s
    worker:
        build:
            context: .
            dockerfile: ./backend_worker/Dockerfile
        depends_on:
            - redis
        env_file:
            - .env
        environment:
            - PLATFORM=${PLATFORM:-windows}
            - MUSIC_PATH=/music
            - NAS_USER=djdmd14
            - NAS_PASS=mc30314500
            - CELERY_BROKER_URL=redis://redis:6379/0
            - CELERY_RESULT_BACKEND=redis://redis:6379/0
        volumes:
            - .:/app
            - music-share:/music:ro
        healthcheck:
            test: ["CMD", "celery", "-A", "backend_worker.celery_app.celery", "status"]
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 10s
    frontend:
        build:
            context: .
            dockerfile: ./frontend/Dockerfile
        ports:
            - "8080:8080"
        depends_on:
            backend:
                condition: service_healthy
        env_file:
            - .env
        volumes:
            - frontend-dir:/frontend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 10s
volumes:
    library-dir:
        driver: local
        driver_opts:
            type: none
            device: ./backend/library_api
            o: bind
    recommender-dir:
        driver: local
        driver_opts:
            type: none
            device: ./backend/recomender_api
            o: bind
    db-data:
        driver: local
        driver_opts:
            type: none
            device: ./backend/library_api/data
            o: bind
    recommender-db-data:
        driver: local
        driver_opts:
            type: none
            device: ./backend/recomender_api/data
            o: bind
    frontend-dir:
        driver: local
        driver_opts:
            type: none
            device: ./frontend
            o: bind
    music-share:
        driver_opts:
            type: cifs
            device: //SRV_NAS/music
            o: username=${NAS_USER},password=${NAS_PASS},uid=1000,gid=1000,vers=2.0,iocharset=utf8
